name: Run Tests and Collect Coverage

on: [push]

jobs:
  codecov:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v1

      - name: Checkout Submodules
        run: git submodule sync --recursive && git submodule update --init --recursive

      - name: Update Software Repository
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update -qq
 
      - name: Install Python 3
        uses: actions/setup-python@v1
        with:
          python-version: '3.x'
          architecture: 'x64'

      - name: Install GCC 9
        run: |
          sudo apt-get install -qq g++-9
          sudo apt-get install -qq gcc-9
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 20
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 20
          sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 20
          sudo update-alternatives --config gcc
          sudo update-alternatives --config g++
          sudo update-alternatives --config gcov
          
      - name: Install LCov
        run: |
          wget https://github.com/linux-test-project/lcov/releases/download/v1.15/lcov-1.15.tar.gz
          tar -xvf lcov-1.15.tar.gz
          cd lcov-1.15 && sudo make install
          cd ..
          
      - name: Install OpenGL
        run: sudo apt-get install libgl-dev
 
      - name: Install Conan
        run: pip install conan
      
      - name: Prep for Qt Install
        run: |
          sudo mkdir -p ~/.local/share/Qt && cd ~/.local/share/Qt
          sudo bash -c 'echo "[QtAccount]" >> qtaccount.ini'
          sudo bash -c 'echo "email=${{ secrets.qt_email }}" >> qtaccount.ini'
          sudo bash -c 'echo "jwt=${{ secrets.qt_jwt }}" >> qtaccount.ini'
          sudo bash -c 'echo "u=${{ secrets.qt_u }}" >> qtaccount.ini'
          cd ~

      - name: Install Qt
        uses: jurplel/install-qt-action@v2.14.0
        with:
          version: 6.1.0
          target: desktop
          modules: qtcharts

      - name: Download Conan Packages
        run: |
            cd ${GITHUB_WORKSPACE}
            mkdir Conan && cd Conan
            conan install ..
            cd ${GITHUB_WORKSPACE}

      - name: Build D-Viz
        run: |
          ${RUNNER_WORKSPACE}/Qt/6.1.0/gcc_64/bin/qmake \
            D-Viz.pro \
            CONFIG+=debug \
            QMAKE_CXXFLAGS+=-fno-inline \
            QMAKE_CXXFLAGS+=-fno-inline-small-functions \
            QMAKE_CXXFLAGS+=-fno-default-inline
          make -j4

      - name: Run Tests
        run: |
          cd ${GITHUB_WORKSPACE}/Output/Debug
          ./UnitTests -platform offscreen
          
      - name: Collect Coverage
        run: |
          lcov \
            --capture \
            --directory . \
            --output-file coverage.info \
            --base-directory ${GITHUB_WORKSPACE}/Source
          lcov \
            --remove coverage.info \
            '/usr/*' \
            '*/conan/*' \
            '*/Output/*' \
            '*/Tests/*' \
            '*/QtCore/*' \
            '*/QtGui/*' \
            '*/QtTest/*' \
            '*/QtWidgets/*' \
            '*/ThirdParty/*' \
            '*/boost/*' \
            '*/.moc/*' \
            --output-file coverage.info
          lcov \
            --list coverage.info
          
      - name: Upload Coverage Report
        run: |
          export CODECOV_TOKEN=${{ secrets.CodeCov }}
          bash <(curl -s https://codecov.io/bash) -f coverage.info || \
          echo "Codecov did not collect coverage reports"
